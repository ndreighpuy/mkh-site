"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3518],{4369:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"tugas-spk-w4","metadata":{"permalink":"/tugas-spk-w4","source":"@site/blog/2025-04-22-tugas/2025-04-22-spk-w4.md","title":"Tugas SPK ke-4","description":"Soal Nomor 1","date":"2025-04-22T00:00:00.000Z","tags":[{"inline":true,"label":"spk","permalink":"/tags/spk"},{"inline":true,"label":"ahp","permalink":"/tags/ahp"}],"readingTime":7.725,"hasTruncateMarker":true,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"},{"name":"Muhammad Aditya","title":"Student","url":"https://github.com/reighpuy","socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://media.discordapp.net/attachments/1231244153971539996/1364457653018820618/width533.png?ex=6809bdb6&is=68086c36&hm=2131e8236ea8a3f1b6a52a1c1bd80f37803007ab394e22cc3e53c22add10b110&=&format=webp&quality=lossless","key":"madit","page":null},{"name":"Fariz Hanafi","title":"Student","url":"https://github.com/reighpuy","socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://media.discordapp.net/attachments/1231244153971539996/1364457732329177189/width600.png?ex=6809bdc9&is=68086c49&hm=a189ac4f4fbbddb101cccb075b1d9c598b3607e43910f63f4c483fcd61498a21&=&format=webp&quality=lossless&width=263&height=350","key":"fariz","page":null},{"name":"Farhan Damara Fiansah","title":"Student","url":"https://github.com/reighpuy","socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://media.discordapp.net/attachments/1231244153971539996/1364457802415865877/width389.png?ex=6809bdda&is=68086c5a&hm=d464d4d069b51a549ae3201dc718d07dc64a2ccb87e9577de19e2e9a2976482a&=&format=webp&quality=lossless","key":"damara","page":null},{"name":"Bintang Ariel Septian","title":"Student","url":"https://github.com/reighpuy","socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"bintang","page":null}],"frontMatter":{"slug":"tugas-spk-w4","title":"Tugas SPK ke-4","tags":["spk","ahp"],"authors":["khadaffy","madit","fariz","damara","bintang"]},"unlisted":false,"nextItem":{"title":"Web Scraping using Python","permalink":"/web-scraping-using-python"}},"content":"## Soal Nomor 1\\r\\n\\r\\nAdi berulang tahun yang ke-17, Kedua orang tuanya janji untuk membelikan sepeda motor sesuai yang di inginkan Adi. Adi memiliki pilihan yaitu motor Ninja, Tiger dan Vixsion . Adi memiliki Kriteria dalam pemilihan sepeda motor yang nantinya akan dia beli yaitu : sepeda motornya memiliki desain yang bagus, berkualitas serta irit dalam bahan bakar.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n(Kerjakan kasus diatas dengan menggunakan metode AHP (Analytic Hierarchical Proces) dengan Batasan kriteria).\\r\\n\\r\\n### Penyelesaian Soal Nomor 1\\r\\n\\r\\n#### Tahap Pertama\\r\\n\\r\\nMenentukan bobot dari masing-masing kriteria:\\r\\n\\r\\n- Desain lebih penting `2 kali` dari pada Irit.\\r\\n- Desain lebih penting `3 kali` dari pada Kualitas.\\r\\n- Irit lebih penting `1.5 kali` dari pada Kualitas.\\r\\n\\r\\n**Pair Comparation Matrix**\\r\\n| Kriteria | Desain | Irit | Kualitas | Priority Vector |\\r\\n|----------------------------------------------------|--------|-------|----------|-----------------|\\r\\n| Desain | 1 | 2 | 3 | 0,5455 |\\r\\n| Irit | 0,5 | 1 | 1,5 | 0,2727 |\\r\\n| Kualitas | 0,333 | 0,667 | 1 | 0,1818 |\\r\\n| Jumlah | 1,833 | 3,667 | 5,5 | 1,0000 |\\r\\n| Principal Eigenvalue (\u03bbmax) | | | | 3,00 |\\r\\n| Consistency Index (CI) | | | | 0 |\\r\\n| Consistency Ratio (CR) | | | | 0,0% |\\r\\n\\r\\nDari tabel diatas, Priority Vector (kolom paling kanan) menunjukan bobot dari masing-masing\\r\\nkriteria, jadi dalam hal ini Desain merupakan bobot tertinggi/terpenting menurut Adi, disusul Irit dan\\r\\nyang terakhir adalah Kualitas.\\r\\n\\r\\n### Langkah Pengerjaan Tabel\\r\\n\\r\\n1. Untuk perbandingan antara masing \u2013 masing kriteria berasal dari bobot yang telah di berikan Adi pertama kali.\\r\\n2. Sedangkan untuk Baris jumlah, merupakan hasil penjumalahan vertikal dari masing-masing kriteria\\r\\n3. Untuk `Priority Vector` di dapat dari hasil penjumlahan dari semua sel disebelah Kirinya (pada baris yang sama) setelah terlebih dahulu dibagi dengan Jumlah yang ada dibawahnya, kemudian hasil penjumlahan tersebut dibagi dengan angka 3.\\r\\n4. Untuk mencari **Principal Eigenvalue (\u03bbmax)** Rumusnya adalah menjumlahkan hasil perkalian antara sel pada baris jumlah dan sel pada kolom `Priority Vector`.\\r\\n5. Menghitung Consistency Index (CI) dengan rumus:\\r\\n   ```html\\r\\n   CI = (\u03bbmax-n)/(n-1)\\r\\n   ```\\r\\n6. Sedangkan untuk menghitung nilai CR menggunakan rumus:\\r\\n\\r\\n   ```html\\r\\n   CR = CI/RI\\r\\n   ```\\r\\n\\r\\n   nilai RI didapat dari:\\r\\n\\r\\n   | n   | 1   | 2   | 3   | 4   | 5    | 6    | 7    | 8    | 9    | 10   |\\r\\n   | --- | --- | --- | --- | --- | ---- | ---- | ---- | ---- | ---- | ---- |\\r\\n   | RI  | 0   | 0   | 5,8 | 0,9 | 1,12 | 1,24 | 1,32 | 1,41 | 1,45 | 1,49 |\\r\\n\\r\\n   Jadi untuk `n=3`, **RI=0.58**. Jika hasil perhitungan CR lebih kecil atau sama dengan `10%`, ketidak konsistenan masih bisa diterima, sebaliknya jika lebih besar dari `10%`, tidak bisa diterima.\\r\\n\\r\\n#### Tahap Kedua\\r\\n\\r\\nKebetulan teman Adi memiliki teman yang memiliki motor yang sesuai dengan pilihan Adi. Setelah Adi mencoba motor temannya tersebut Adi memberikan penilaian (disebut dengan **Pair-wire Comparation**)\\r\\n\\r\\n---\\r\\n\\r\\n- Desain lebih penting `2 kali` dari pada Irit.\\r\\n- Desain lebih penting `3 kali` dari pada Kualitas.\\r\\n- Irit lebih penting `1.5 kali` dari pada kualitas.\\r\\n\\r\\n---\\r\\n\\r\\n- Ninja `4 kali` desainnya lebih baik daripada Tiger.\\r\\n- Ninja `3 kali` desainnya lebih baik dari pada Vixsion.\\r\\n- Tiger `1/2 kali` desainnya lebih baik dari pada Vixsion.\\r\\n\\r\\n---\\r\\n\\r\\n- Ninja `1/3 kali` lebih irit daripada Tiger.\\r\\n- Ninja `1/4 kali` lebih irit dari pada Vixsion.\\r\\n- Tiger `1/2 kali` lebih irit dari pada Vixsion.\\r\\n\\r\\n---\\r\\n\\r\\n- Ninja `1/3 kali` lebih berkualitas daripada Tiger.\\r\\n- Ninja `1/4 kali` lebih berkualitas dari pada vixsion.\\r\\n- Tiger `1/2 kali` lebih berkualitas dari pada Vixsion.\\r\\n\\r\\n---\\r\\n\\r\\nBerdasarkan penilaian tersebut maka dapat dibuatkan tabel (disebut **Pair-wire Comparation Matrix**)\\r\\n\\r\\n| Desain                 | Ninja | Tiger | Vixsion | Priority Vector |\\r\\n| ---------------------- | ----- | ----- | ------- | --------------- |\\r\\n| Ninja                  | 1     | 4     | 3       | 0,6233          |\\r\\n| Tiger                  | 0,25  | 1     | 0,5     | 0,1373          |\\r\\n| Vixsion                | 0,333 | 2     | 1       | 0,2394          |\\r\\n| Jumlah                 | 1,583 | 7     | 4,5     | 1,0000          |\\r\\n| Principal Eigenvalue   |       |       |         | 3,025           |\\r\\n| Consistency Index (CI) |       |       |         | 0,01            |\\r\\n| Consistency Ratio (CR) |       |       |         | 2,2%            |\\r\\n\\r\\n| Irit                   | Ninja | Tiger | Vixsion | Priority Vector |\\r\\n| ---------------------- | ----- | ----- | ------- | --------------- |\\r\\n| Ninja                  | 1     | 0,333 | 0,25    | 0,1226          |\\r\\n| Tiger                  | 3     | 1     | 0,5     | 0,3202          |\\r\\n| Vixsion                | 4     | 2     | 1       | 0,5572          |\\r\\n| Jumlah                 | 8     | 3,333 | 1,75    | 1,0000          |\\r\\n| Principal Eigenvalue   |       |       |         | 3,023           |\\r\\n| Consistency Index (CI) |       |       |         | 0,01            |\\r\\n| Consistency Ratio (CR) |       |       |         | 2,0%            |\\r\\n\\r\\n| Kualitas               | Ninja | Tiger | Vixsion | Priority Vector |\\r\\n| ---------------------- | ----- | ----- | ------- | --------------- |\\r\\n| Ninja                  | 1     | 3     | 5       | 0,6479          |\\r\\n| Tiger                  | 1/3   | 1     | 2       | 0,2299          |\\r\\n| Vixsion                | 1/5   | 1/2   | 1       | 0,1222          |\\r\\n| Jumlah                 | 1,533 | 4,5   | 8       | 1               |\\r\\n| Principal Eigenvalue   |       |       |         | 3,0054          |\\r\\n| Consistency Index (CI) |       |       |         | 0,0027          |\\r\\n| Consistency Ratio (CR) |       |       |         | 0,0465%         |\\r\\n\\r\\n#### Tahap Ketiga\\r\\n\\r\\nSetelah mendapatkan bobot untuk ketiga kriteria dan skor untuk masing-masing kriteria bagi ketiga motor pilihannya, maka langkah terakhir adalah menghitung total skor untuk ketiga motor tersebut. Untuk itu Adi akan merangkum semua hasil penilaiannya tersebut dalam bentuk tabel yang disebut `Overall Composite Weight`.\\r\\n\\r\\n| Overall composite weight | weight | Ninja  | Tiger  | Vixsion |\\r\\n| ------------------------ | ------ | ------ | ------ | ------- |\\r\\n| Desain                   | 0,5455 | 0,6233 | 0,1373 | 0,2394  |\\r\\n| Irit                     | 0,2727 | 0,1226 | 0,3202 | 0,5572  |\\r\\n| Kualitas                 | 0,1818 | 0,0090 | 0,9009 | 0,0901  |\\r\\n| Composite Weight         |        | 0,3751 | 0,3260 | 0,2989  |\\r\\n\\r\\n### Cara pengerjaan Overall Composite weight\\r\\n\\r\\n- Kolom `Weight` diambil dari kolom `Priority Vector` dalam matrix `Kriteria`.\\r\\n- Ketiga kolom lainnya (`Ninja`, `Tiger` dan `Vixsion`) diambil dari kolom `Priority Vector` ketiga matrix `Desain`, `Irit` dan `Kualitas`.\\r\\n- Baris `Composite Weight` diperoleh dari jumlah hasil perkalian sel diatasnya dengan `weight`.\\r\\n- Berdasarkan table di atas maka dapat di ambil kesimpulan bahwa yang memiliki skor paling tinggi adalah **Ninja** yaitu `0,3751`, disusul **Tiger** dengan skor `0,3260` dan yang terakhir adalah **Vixsion** dengan skor `0,2989`. Sehingga motor yang akan dibeli Adi adalah **Ninja**.\\r\\n\\r\\n## Soal Nomor 2\\r\\n\\r\\nTerdapat suatu permasalahan dalam menentukan pemilihan tas wanita dengan 3 kriteria yaitu:\\r\\n\\r\\n1. Harga (merk).\\r\\n2. Model (Desain dan Ukuran).\\r\\n3. Kualitas (Bahan yang digunakan).\\r\\n\\r\\nDan terdapat 3 alternatif yaitu:\\r\\n\\r\\n1. Charles & Keith\\r\\n2. Elizabeth\\r\\n3. Sophie Martin\\r\\n\\r\\n![Gambar soal nomor 2](https://yunniastuti.wordpress.com/wp-content/uploads/2015/01/11.png?w=325)\\r\\n\\r\\nKetentuan dari kriteria diatas adalah:\\r\\n\\r\\n1. `Model 4x` lebih penting dari pada Harga.\\r\\n2. `Model 3x` lebih penting dari pada Kualitas.\\r\\n3. `Kualitas 2x` lebih penting dari Harga.\\r\\n\\r\\nDi lihat dari kriteria harga:\\r\\n\\r\\n1. Harga Charles & keith `5x lebih tinggi` dari Sophie martin.\\r\\n2. Harga Charles & keith `3x lebih tinggi` dari Elizabeth.\\r\\n3. Harga Elizabeth `2x lebih tinggi` dari Sophie Martin.\\r\\n\\r\\nDi lihat dari kriteria model:\\r\\n\\r\\n1. Desain Charles & keith `4x lebih elegan` dari Sophie Martin.\\r\\n2. Desain Charles & keith `3x lebih elegan` dari Elizabeth.\\r\\n3. Desain Elizabeth `2x lebih elegan` dari Sophie Martin.\\r\\n\\r\\nDi lihat dari kriteria Kualitas:\\r\\n\\r\\n1. Kualitas Charles & keith `3x lebih bagus` dari Sophie Martin.\\r\\n2. Kualitas Charles & keith `2x lebih bagus` dari Elizabeth.\\r\\n3. Kualitas Elizabeth `2x lebih bagus` dari Sophie Martin.\\r\\n\\r\\nDari kasus diatas, tentukan pemilihan sepatu yang paling diminati oleh pelanggan.\\r\\n\\r\\n### Penyelesaian Soal Nomor 2\\r\\n\\r\\n1. `Model 4x` lebih penting dari pada Harga.\\r\\n2. `Model 3x` lebih penting dari pada Kualitas.\\r\\n3. `Kualitas 2x` lebih penting dari Harga.\\r\\n   ![Tabel-1](https://media.discordapp.net/attachments/1231244153971539996/1364455798813491292/tabel-1.png?ex=6809bbfc&is=68086a7c&hm=3e8d2b6db976a15ea3eaade30867196dfa385c98b4db23d59aa254d4ca902187&=&format=webp&quality=lossless)\\r\\n\\r\\nDi lihat dari kriteria harga:\\r\\n\\r\\n1. Harga Charles & keith `5x lebih tinggi` dari Sophie martin.\\r\\n2. Harga Charles & keith `3x lebih tinggi` dari Elizabeth.\\r\\n3. Harga Elizabeth `2x lebih tinggi` dari Sophie Martin.\\r\\n   ![Tabel-2](https://media.discordapp.net/attachments/1231244153971539996/1364455798431813652/tabel-2.png?ex=6809bbfc&is=68086a7c&hm=eff864ed161450441ec68435d98bc35795e19ca3fdf4c6703668fc83de7e0d96&=&format=webp&quality=lossless)\\r\\n\\r\\nDi lihat dari kriteria model:\\r\\n\\r\\n1. Desain Charles & keith `4x lebih elegan` dari Sophie Martin.\\r\\n2. Desain Charles & keith `3x lebih elegan` dari Elizabeth.\\r\\n3. Desain Elizabeth `2x lebih elegan` dari Sophie Martin.\\r\\n   ![Tabel-3](https://media.discordapp.net/attachments/1231244153971539996/1364455798196928543/tabel-3.png?ex=6809bbfc&is=68086a7c&hm=cb5b03b9334b1fa5589478ba8f0a5504325360c43a16d0341683528c513a8657&=&format=webp&quality=lossless)\\r\\n\\r\\nDi lihat dari kriteria Kualitas:\\r\\n\\r\\n1. Kualitas Charles & keith `3x lebih bagus` dari Sophie Martin.\\r\\n2. Kualitas Charles & keith `2x lebih bagus` dari Elizabeth.\\r\\n3. Kualitas Elizabeth `2x lebih bagus` dari Sophie Martin.\\r\\n   ![Tabel-4](https://media.discordapp.net/attachments/1231244153971539996/1364455797945401434/tabel-4.png?ex=6809bbfc&is=68086a7c&hm=115a93c6eed7ca2e1dcffae1bd2df7c2810a7cd2f81e56365189d6dd8692a9f0&=&format=webp&quality=lossless)\\r\\n\\r\\nBerikut adalah pohon dengan bobot pada kriteria dan alternatifnya:\\r\\n![Bobot](https://media.discordapp.net/attachments/1231244153971539996/1364455797727432754/chart.png?ex=6809bbfc&is=68086a7c&hm=2f83c67cfcbf570ed450b781eaea6d0b8911f052302657962a55ff6f6020a995&=&format=webp&quality=lossless)\\r\\n\\r\\nTahap terakhir menentukan urutan pada pilihan alternatif dengan cara:\\r\\n\\r\\n```html\\r\\nEV Alternatif1 = (EV Kriteria1 x EV Alternatif1 kriteria1) + (EV Kriteria2 x EV\\r\\nAlternatif1 kriteria2) + (EV Kriteria3 x EV Alternatif1 kriteria3)\\r\\n```\\r\\n\\r\\n- `EV Elizabeth = (0,137 x 0,229) + (0,624 x 0,624) + (0,239 x 0,163) = 0,459`\\r\\n- `EV Sophie Martin = (0,137 x 0,122) + ( 0,624 x 0,239) + (0,239 x 0,297) = 0,237`\\r\\n- `EV Charles&Keith = (0,137 x 0,648) + (0,624 x 0,137) + (0,239 x 0,539) = 0,303`\\r\\n\\r\\nHasil yang didapat:\\r\\n\\r\\n1. **Elizabeth dengan hasil 0,459**.\\r\\n2. **Charles & Keith dengan hasil 0,303**.\\r\\n3. **Sophie Martin dengan hasil 0,237**.\\r\\n\\r\\n[Kunjungi Berkas Excel](https://docs.google.com/spreadsheets/d/1D5LSTJ9nzV1Dj174XbVkNyfwCMDxP7xN/edit?usp=sharing&ouid=104275818632620058936&rtpof=true&sd=true)"},{"id":"web-scraping-using-python","metadata":{"permalink":"/web-scraping-using-python","source":"@site/blog/2018-11-24-web-scraping-using-python.md","title":"Web Scraping using Python","description":"Webscraping - BeautifulSoup","date":"2018-11-24T00:00:00.000Z","tags":[{"inline":true,"label":"webscrape","permalink":"/tags/webscrape"},{"inline":true,"label":"scraping","permalink":"/tags/scraping"},{"inline":true,"label":"python","permalink":"/tags/python"},{"inline":true,"label":"beautifulsoup","permalink":"/tags/beautifulsoup"}],"readingTime":2.75,"hasTruncateMarker":true,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"}],"frontMatter":{"slug":"web-scraping-using-python","title":"Web Scraping using Python","authors":"khadaffy","tags":["webscrape","scraping","python","beautifulsoup"]},"unlisted":false,"prevItem":{"title":"Tugas SPK ke-4","permalink":"/tugas-spk-w4"},"nextItem":{"title":"Exploring TUI & CLA","permalink":"/exploring-tui-and-cla"}},"content":"![Webscraping - BeautifulSoup](https://miro.medium.com/v2/resize:fit:720/format:webp/1*atk74YuoKuEn_b-Qs8nOgg.png)\\r\\n\\r\\n<center><em>Image by: Mohammad Reza</em></center><br></br>\\r\\n\\r\\nPython stands out as an excellent choice for web scraping due to its inherent simplicity and readability, making it accessible for both beginners and experienced coders. Its true power in this domain, however, lies in its rich ecosystem of specialized libraries. Notably, Beautiful Soup excels at parsing the intricate structure of HTML and XML documents, acting as your guide to easily navigate and pinpoint desired elements within a webpage. Complementing this, the Requests library provides the essential functionality to send HTTP requests, effectively fetching the content of web pages for your scraping endeavors. Furthermore, the vast and active Python community ensures ample resources, tutorials, and support are readily available should you encounter any challenges along your scraping journey.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n### A Pretty Simple Example\\r\\n\\r\\nUsing `BeautifulSoup` -\\r\\n\\r\\n```python\\r\\nimport requests\\r\\nfrom bs4 import BeautifulSoup\\r\\n\\r\\n# The URL of the webpage we want to scrape\\r\\nurl = \\"https://www.example.com\\"\\r\\n\\r\\n# Send an HTTP GET request to the URL\\r\\nresponse = requests.get(url)\\r\\nresponse.raise_for_status() # Raise an exception for bad status codes\\r\\n\\r\\n# Parse the HTML content using Beautiful Soup\\r\\nsoup = BeautifulSoup(response.content, \'html.parser\')\\r\\n\\r\\n# Find the title tag\\r\\ntitle_tag = soup.find(\'title\')\\r\\n\\r\\n# Extract the text from the title tag\\r\\nif title_tag:\\r\\n    title = title_tag.text\\r\\n    print(f\\"The title of the page is: {title}\\")\\r\\nelse:\\r\\n    print(\\"Could not find the title tag.\\")\\r\\n```\\r\\n\\r\\n**In this code**:\\r\\n\\r\\n1. We import the `requests` and `BeautifulSoup` libraries.\\r\\n2. We define the `url` of the webpage we want to scrape.\\r\\n3. `requests.get(url)` sends a request to the specified URL and retrieves the HTML content.\\r\\n4. `response.raise_for_status()` is good practice to check if the request was successful (no error codes).\\r\\n5. `BeautifulSoup(response.content, \'html.parser\')` creates a BeautifulSoup object, parsing the HTML content. `\'html.parser\'` is the parser we\'re using.\\r\\n6. `soup.find(\'title\')` searches the parsed HTML for the first `<title>` tag.\\r\\n7. `title_tag.text` extracts the text content within the `<title>` tag.\\r\\n\\r\\n## Ethical Considerations - Scraping Responsibly\\r\\n\\r\\nIt\'s crucial to talk about ethics when it comes to web scraping. Remember that websites are someone else\'s property, and we need to be respectful. Here are a few key points to keep in mind:\\r\\n\\r\\n- Most websites have a robots.txt file that specifies which parts of the site should not be accessed by bots (including your scraper). Always respect these rules. You can usually find it at yourwebsite.com/robots.txt.\\r\\n- Make your requests at a reasonable rate to avoid overwhelming the website\'s server. Implement delays between requests.\\r\\n- Some websites explicitly prohibit scraping in their terms of service. Make sure you\'re not violating these terms.\\r\\n- Avoid extracting excessive data that you won\'t actually use.\\r\\n- Be mindful of how you use the scraped data and avoid infringing on copyrights or privacy.\\r\\n\\r\\n## What Else Can I Do?\\r\\n\\r\\nAs I become more comfortable with the basics, I can explore more advanced techniques such as:\\r\\n\\r\\n1. Scraping data from websites with pagination.\\r\\n2. Handling websites that use JavaScript to load content (you might need tools like Selenium for this).\\r\\n3. More precise ways to target specific elements in the HTML.\\r\\n4. Saving your extracted data into various formats like CSV, JSON, or databases.\\r\\n\\r\\n> So, are you ready to dive in? Start with the basics, explore the power of `requests` and `BeautifulSoup`, Happy scraping and always remember to scrape responsibly."},{"id":"exploring-tui-and-cla","metadata":{"permalink":"/exploring-tui-and-cla","source":"@site/blog/2018-10-06-exploring-tui-and-cla.md","title":"Exploring TUI & CLA","description":"TUI","date":"2018-10-06T00:00:00.000Z","tags":[{"inline":true,"label":"tui","permalink":"/tags/tui"},{"inline":true,"label":"cla","permalink":"/tags/cla"},{"inline":true,"label":"text-based-ui","permalink":"/tags/text-based-ui"},{"inline":true,"label":"command-line application","permalink":"/tags/command-line-application"}],"readingTime":1.435,"hasTruncateMarker":true,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"}],"frontMatter":{"slug":"exploring-tui-and-cla","title":"Exploring TUI & CLA","authors":"khadaffy","tags":["tui","cla","text-based-ui","command-line application"]},"unlisted":false,"prevItem":{"title":"Web Scraping using Python","permalink":"/web-scraping-using-python"},"nextItem":{"title":"Base64 Encoder in Python","permalink":"/base64-encoder-in-python"}},"content":"![TUI](https://upload.wikimedia.org/wikipedia/commons/b/b8/Midnight_Commander_%282005%29_en.png)\\r\\n\\r\\n<center><em>Image from wiki</em></center><br></br>\\r\\n\\r\\nA TUI is a user interface that relies solely on text-based elements, such as characters and symbols, to interact with the user. It\'s often displayed in a terminal or console window, where users input commands and receive textual output.\\r\\n\\r\\nCLAs, on the other hand, are programs designed to be run from a command-line interpreter, like the terminal or command prompt. While not all CLAs have elaborate TUIs, many leverage text-based elements to provide a more interactive and user-friendly experience within the command-line environment.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Why use TUIs and CLAs?\\r\\n\\r\\n1. TUIs and CLAs are often faster and more responsive than their GUI counterparts, especially for tasks that don\'t require complex visual elements.\\r\\n2. They provide direct access to the underlying operating system, enabling users to perform intricate operations and automate tasks with greater control.\\r\\n3. TUIs can be more accessible to users with visual impairments, as screen readers can easily interpret and vocalize text-based information.\\r\\n4. For many, there\'s a certain charm and satisfaction in mastering the command line and navigating a well-designed TUI.\\r\\n\\r\\n## Examples of TUIs and CLAs:\\r\\n\\r\\n1. Git (Version Control System).\\r\\n2. Vim and Nano (Text editors).\\r\\n3. Htop (System monitoring tool khadaffy).\\r\\n4. MySQL and PostgreSQL (Database management system).\\r\\n5. And many programming languages provide command-line tools for building, testing, and debugging code.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nIn an era dominated by GUIs, TUIs and CLAs may seem like relics of the past. However, their efficiency, flexibility, and directness make them valuable tools for both developers and everyday users. Whether you\'re a seasoned developer or a curious newcomer, exploring the world of TUIs and CLAs can unlock new levels of power and control over your computing environment."},{"id":"base64-encoder-in-python","metadata":{"permalink":"/base64-encoder-in-python","source":"@site/blog/2018-09-07-base64-encoder-in-python.md","title":"Base64 Encoder in Python","description":"Base64","date":"2018-09-07T00:00:00.000Z","tags":[{"inline":true,"label":"base64","permalink":"/tags/base-64"},{"inline":true,"label":"encoder","permalink":"/tags/encoder"},{"inline":true,"label":"python","permalink":"/tags/python"}],"readingTime":2.445,"hasTruncateMarker":true,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"}],"frontMatter":{"slug":"base64-encoder-in-python","title":"Base64 Encoder in Python","authors":"khadaffy","tags":["base64","encoder","python"]},"unlisted":false,"prevItem":{"title":"Exploring TUI & CLA","permalink":"/exploring-tui-and-cla"},"nextItem":{"title":"How I Learned Command Line","permalink":"/how-i-learned-command-line"}},"content":"![Base64](https://marquesfernandes.com/wp-content/uploads/2020/02/base64-wallpaper.jpg)\\r\\n\\r\\n<center><em>Image by: marquesfernandes.com</em></center><br></br>\\r\\n\\r\\nThink of Base64 as a translator. It takes binary data - the raw Os and 1s that computers understand - and converts it into a squence of printable ASCII characters. Why? because some systems are designed to handle text-based data ore reliably than raw binary. Imagine trying to send an image as a series of raw bytes through an email system that expects text! That\'s where Base64 comes to rescue.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nIt\'s important to understand that **Base64 is not encryption**. It\'s an encoding scheme, meaning it\'s designed to make data transmitable and readable in text-based environments, not to hide it securely. Anyone with the right tools can easily decode Base64 back to its original form.\\r\\n\\r\\n**You might encounter Base64 in various scenarios, such as:**\\r\\n\\r\\n- Encoding binary files so they can be included in email messages.\\r\\n- Embedding small files (like image or fonts) directly within HTML or CSS.\\r\\n- Encoding usernames and password for simple HTTP authentication.\\r\\n- Storing binary data within text-based configuration files like JSON or XML.\\r\\n\\r\\n## Introducing the Base64 Module\\r\\n\\r\\nPython, being the versatile language it is, provides a built-in module called `base64` that makes working with Base64 encoding and decoding a breeze. Let\'s explore how to use it.\\r\\n\\r\\n## Encoding Data with base64.b64encode()\\r\\n\\r\\nThe primary function for encoding in the base64 module is `b64encode()`. It takes a `bytes-like` object as input and returns the base64 encoded data, also as a bytes object. This is a key point: you\'ll often need to convert your strings to bytes before encoding.\\r\\n\\r\\n**Simple Code Example**:\\r\\n\\r\\n```py\\r\\nimport base64\\r\\n\\r\\noriginal_string = \\"Hello, Python Base64!\\"\\r\\nbyte_data = original_string.encode(\'utf-8\')\\r\\nbase64_encoded = base64.bs64encode(byte_data)\\r\\nprint(f\\"Original string: {original_string}\\")\\r\\nprint(f\\"Base64 encoded (bytes): {base64_encoded})\\r\\nbase64_string = base64_encoded.decode(\'utf-8\')\\r\\nprint(f\\"base64 encoded (string): {base64_string}\\")\\r\\n```\\r\\n\\r\\n**In this code:**\\r\\n\\r\\n- We import the base64 module.\\r\\n- We have our original string.\\r\\n- We use .encode(\'utf-8\') to convert the string into a sequence of bytes. UTF-8 is a common and recommended encoding for text.\\r\\n- We call `base64.b64encode()` with the byte data. The result `base64_encoded_bytes` is also in bytes format.\\r\\n- Finally, we use `.decode(\'utf-8\')` to convert the encoded bytes back into a regular string, making it easier to read and display.\\r\\n\\r\\n## Encoding Binary Files the Python Way\\r\\n\\r\\nWhat about encoding the contents of a file. like an image or a document? Here\'s how you can do it.\\r\\n\\r\\n```py\\r\\nimport base64\\r\\n\\r\\ndef encode_file_to_base64(file_path):\\r\\n    \\"\\"\\"Encodes the content of a file to a Base64 string.\\"\\"\\"\\r\\n    try:\\r\\n        with open(file_path, \'rb\') as file:\\r\\n            binary_data = file.read()\\r\\n            base64_encoded_data = base64.b64encode(binary_data).decode(\'utf-8\')\\r\\n            return base64_encoded_data\\r\\n    except FileNotFoundError:\\r\\n        return f\\"Error: File not found at {file_path}\\"\\r\\n\\r\\nimage_path = \\"your_image.jpg\\"\\r\\nencoded_image_data = encode_file_to_base64(image_path)\\r\\n\\r\\nif isinstance(encoded_image_data, str) and encoded_image_data.starswith(\\"Error\\"):\\r\\n    print(encoded_image_data)\\r\\nelse:\\r\\n    print(f\\"Base64 encoded data of {image_ath} (first 200 characters):\\\\n{encoded_image_data[:200]}...\\")\\r\\n```\\r\\n\\r\\n**In this snippet**:\\r\\n\\r\\n1. We defined a function `base64_file_to_base64` that takes the file path as input.\\r\\n2. We open the file in binary read mode(\'rb\') because we\'re dealing with raw file data.\\r\\n3. We read"},{"id":"how-i-learned-command-line","metadata":{"permalink":"/how-i-learned-command-line","source":"@site/blog/2018-06-15-how-i-learned-cl.md","title":"How I Learned Command Line","description":"Command Line","date":"2018-06-15T00:00:00.000Z","tags":[{"inline":true,"label":"command line","permalink":"/tags/command-line"},{"inline":true,"label":"cmd","permalink":"/tags/cmd"},{"inline":true,"label":"cli","permalink":"/tags/cli"}],"readingTime":3.81,"hasTruncateMarker":true,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"}],"frontMatter":{"slug":"how-i-learned-command-line","title":"How I Learned Command Line","authors":"khadaffy","tags":["command line","cmd","cli"]},"unlisted":false,"prevItem":{"title":"Base64 Encoder in Python","permalink":"/base64-encoder-in-python"},"nextItem":{"title":"Intro","permalink":"/intro"}},"content":"![Command Line](https://www.dataquest.io/wp-content/uploads/2021/04/command-line-courses-dataquest-1000x520-1-1.gif)\\n\\n<center><em>Image by: dataquest.io</em></center><br></br>\\n\\nRemember that feeling of staring at a black screen with blinking text, feeling completely lost? Yeah, that was me, facing the command line for the first time. It looked intimidating, like some ancient language only understood by tech wizards. I used to think it was just for \\"hackers\\" and those who lived and breathed code. But guess what? I was wrong. So, so wrong.\\n\\nI started this journey because I was tired. Tired of feeling like my computer was dictating my workflow. I wanted more control, more efficiency. And I\'d heard whispers that the command line was the key to unlocking that. Turns out, those whispers were spot on. Learning the command line opened up a whole new world, a world where I could automate tasks, manipulate files, and more.\\n\\n\x3c!-- truncate --\x3e\\n\\n## So, let\'s begin\\n\\nLet\u2019s be honest, my initial encounters were\u2026rough. The sheer number of commands felt overwhelming. `ls`, `cd`, `mkdir`, `rm` \u2013 they were just random letters at first. And the syntax? Don\u2019t even get me started. Errors popped up like mushrooms after a rainstorm, and I felt like I was constantly breaking things.\\n\\nBut I persevered, and here\u2019s what helped me:\\n\\n- Online Tutorials and Courses \u2013 [**Codecademy**](https://www.codecademy.com/) and [**freeCodeCamp**](https://www.freecodecamp.org/) were great. They broke down complex concepts into digestible chunks.\\n- Visual explanations are very helpful \u2013 found this on YouTube. I found a channel that walked me through the commands step by step.\\n- \\"The Linux Command Line\\" by William Shotts \u2013 This book became my trusty companion, a comprehensive guide to navigating the command line.\\n- Stack Overflow \u2013 This site became my best friend.\\n- Then, I practice. Even 20 mins a day made a big difference.\\n\\n## Here\'s a breakdown of my learning strategies:\\n\\n- Start with the basics: Mastering `ls`, `cd`, `mkdir`, `rm`, and `pwd` is _crucial_.\\n- Consistency is key. Even short sessions add up.\\n- Create a cheat sheet (Keep your frequently used commands handy).\\n- Understand the concepts (Don\'t just memorize, understand why the commands work).\\n- Learn about file paths \u2013 Navigating the file system is essential.\\n\\nWhen I finally understood how pipes and redirects worked, it felt like unlocking a secret level in a video game.\\n\\n\\"**So, where does all this command-line knowledge actually take you?** For me, it\'s woven into my daily workflow. I can manage files and directories, moving, renaming, and deleting with simple commands, saving me tons of time. Automating repetitive tasks with custom scripts has been a game-changer, freeing me up to focus on more creative work. When it comes to version control with Git, the command line is my best friend, allowing for precise control. Connecting to remote servers via SSH is seamless, letting me manage projects from anywhere. And for web development, it\'s indispensable\u2014running servers, building projects, and deploying code becomes far more efficient. For example, if I need to quickly search for specific text within files, I use `grep -r \\"example\\" *` to find all instances of \'example\' in my current directory and its subdirectories. Or when I need to locate specific files, `find . -name \\"*.txt\\"` helps me find all text files within a given directory. And `sed \'s/oldtext/newtext/g\' file.txt` allows for quick text file editing. These are just snippets of the power the command line gives you.\\"\\n\\n## A quick tips\\n\\nIf you\'re just starting your command-line journey, don\'t feel overwhelmed. A great way to begin is by setting up a virtual machine, providing a safe sandbox to experiment without fear of damaging your system. Remember that the `man` command is your best friend, offering detailed documentation for any command you encounter. And don\'t hesitate to reach out for help online; the community is incredibly supportive and willing to guide you. Finally, personalize your terminal to make it visually appealing. A customized terminal can make the learning process more enjoyable and less intimidating. Start small, practice consistently, and you\'ll be amazed at how quickly you progress.\\n\\n## - Conclusion\\n\\nLearning the command line was one of the best investments I\'ve made in my tech skills. It\'s boosted my productivity, given me more control over my computer, and opened up a world of possibilities.\\n\\nSo, I encourage you to start your own journey. Open your terminal and type ls. See what happens! Find a basic online tutorial and follow along. You might be surprised at how quickly you pick it up.\\n\\nAnd remember, the command line isn\u2019t just for tech wizards. It\u2019s for anyone who wants to unlock the full potential of their computer."},{"id":"intro","metadata":{"permalink":"/intro","source":"@site/blog/2018-05-01-welcome/index.md","title":"Intro","description":"Hello everyone -","date":"2018-05-01T00:00:00.000Z","tags":[{"inline":true,"label":"intro","permalink":"/tags/intro"}],"readingTime":0.17,"hasTruncateMarker":false,"authors":[{"name":"Muhamad Khadaffy","title":"Full Stack Dev","url":"https://github.com/reighpuy","page":{"permalink":"/authors/khadaffy"},"socials":{"instagram":"https://www.instagram.com/reighpuy","github":"https://github.com/reighpuy"},"imageURL":"https://github.com/reighpuy.png","key":"khadaffy"}],"frontMatter":{"slug":"intro","title":"Intro","authors":"khadaffy","tags":["intro"]},"unlisted":false,"prevItem":{"title":"How I Learned Command Line","permalink":"/how-i-learned-command-line"}},"content":"Hello everyone -\\n\\nThis is Muhamad Khadaffy, the creator of this blog.\\nWhat you are visiting right now is my personal blog, Here i express myself, What i have made, i write it here."}]}}')}}]);