<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>MKH Blog</title>
        <link>https://mkh-site.netlify.app/</link>
        <description>MKH Blog</description>
        <lastBuildDate>Tue, 25 Mar 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Intro]]></title>
            <link>https://mkh-site.netlify.app/intro</link>
            <guid>https://mkh-site.netlify.app/intro</guid>
            <pubDate>Tue, 25 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Hello everyone -]]></description>
            <content:encoded><![CDATA[<p>Hello everyone -</p>
<p>This is Muhamad Khadaffy, the creator of this blog.
What you are visiting right now is my personal blog, Here i express myself, What i have made, I write it here.</p>]]></content:encoded>
            <category>intro</category>
        </item>
        <item>
            <title><![CDATA[Base64 Encoder in Python]]></title>
            <link>https://mkh-site.netlify.app/base64-encoder-in-python</link>
            <guid>https://mkh-site.netlify.app/base64-encoder-in-python</guid>
            <pubDate>Fri, 07 Sep 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Base64]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://marquesfernandes.com/wp-content/uploads/2020/02/base64-wallpaper.jpg" alt="Base64" class="img_ev3q"></p>
<center><em>Image by: marquesfernandes.com</em></center>
<br>
<p>Think of Base64 as a translator. It takes binary data - the raw Os and 1s that computers understand - and converts it into a squence of printable ASCII characters. Why? because some systems are designed to handle text-based data ore reliably than raw binary. Imagine trying to send an image as a series of raw bytes through an email system that expects text! That's where Base64 comes to rescue.</p>
<p>It's important to understand that <strong>Base64 is not encryption</strong>. It's an encoding scheme, meaning it's designed to make data transmitable and readable in text-based environments, not to hide it securely. Anyone with the right tools can easily decode Base64 back to its original form.</p>
<p><strong>You might encounter Base64 in various scenarios, such as:</strong></p>
<ul>
<li>Encoding binary files so they can be included in email messages.</li>
<li>Embedding small files (like image or fonts) directly within HTML or CSS.</li>
<li>Encoding usernames and password for simple HTTP authentication.</li>
<li>Storing binary data within text-based configuration files like JSON or XML.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introducing-the-base64-module">Introducing the Base64 Module<a href="https://mkh-site.netlify.app/base64-encoder-in-python#introducing-the-base64-module" class="hash-link" aria-label="Direct link to Introducing the Base64 Module" title="Direct link to Introducing the Base64 Module">​</a></h2>
<p>Python, being the versatile language it is, provides a built-in module called <code>base64</code> that makes working with Base64 encoding and decoding a breeze. Let's explore how to use it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="encoding-data-with-base64b64encode">Encoding Data with base64.b64encode()<a href="https://mkh-site.netlify.app/base64-encoder-in-python#encoding-data-with-base64b64encode" class="hash-link" aria-label="Direct link to Encoding Data with base64.b64encode()" title="Direct link to Encoding Data with base64.b64encode()">​</a></h2>
<p>The primary function for encoding in the base64 module is <code>b64encode()</code>. It takes a <code>bytes-like</code> object as input and returns the base64 encoded data, also as a bytes object. This is a key point: you'll often need to convert your strings to bytes before encoding.</p>
<p><strong>Simple Code Example</strong>:</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">original_string </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello, Python Base64!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">byte_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> original_string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">base64_encoded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bs64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">byte_data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Original string: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">original_string</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">f"Base64 encoded </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">base64_encoded</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">base64_string </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64_encoded</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"base64 encoded (string): </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">base64_string</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>In this code:</strong></p>
<ul>
<li>We import the base64 module.</li>
<li>We have our original string.</li>
<li>We use .encode('utf-8') to convert the string into a sequence of bytes. UTF-8 is a common and recommended encoding for text.</li>
<li>We call <code>base64.b64encode()</code> with the byte data. The result <code>base64_encoded_bytes</code> is also in bytes format.</li>
<li>Finally, we use <code>.decode('utf-8')</code> to convert the encoded bytes back into a regular string, making it easier to read and display.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="encoding-binary-files-the-python-way">Encoding Binary Files the Python Way<a href="https://mkh-site.netlify.app/base64-encoder-in-python#encoding-binary-files-the-python-way" class="hash-link" aria-label="Direct link to Encoding Binary Files the Python Way" title="Direct link to Encoding Binary Files the Python Way">​</a></h2>
<p>What about encoding the contents of a file. like an image or a document? Here's how you can do it.</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">encode_file_to_base64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Encodes the content of a file to a Base64 string."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">try</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">file_path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rb'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">file</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            binary_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            base64_encoded_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">binary_data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> base64_encoded_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">except</span><span class="token plain"> FileNotFoundError</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"Error: File not found at </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">file_path</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">image_path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"your_image.jpg"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">encoded_image_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> encode_file_to_base64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">image_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token builtin">isinstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">encoded_image_data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">and</span><span class="token plain"> encoded_image_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">starswith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Error"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">encoded_image_data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Base64 encoded data of </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">image_ath</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> (first 200 characters):\n</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">encoded_image_data</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">[</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">200]</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">..."</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>In this snippet</strong>:</p>
<ol>
<li>We defined a function <code>base64_file_to_base64</code> that takes the file path as input.</li>
<li>We open the file in binary read mode('rb') because we're dealing with raw file data.</li>
<li>We read</li>
</ol>]]></content:encoded>
            <category>base64</category>
            <category>encoder</category>
            <category>python</category>
        </item>
        <item>
            <title><![CDATA[How I Learned Command Line]]></title>
            <link>https://mkh-site.netlify.app/how-i-learned-command-line</link>
            <guid>https://mkh-site.netlify.app/how-i-learned-command-line</guid>
            <pubDate>Fri, 15 Jun 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Command Line]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" src="https://www.dataquest.io/wp-content/uploads/2021/04/command-line-courses-dataquest-1000x520-1-1.gif" alt="Command Line" class="img_ev3q"></p>
<center><em>Image by: dataquest.io</em></center>
<br>
<p>Remember that feeling of staring at a black screen with blinking text, feeling completely lost? Yeah, that was me, facing the command line for the first time. It looked intimidating, like some ancient language only understood by tech wizards. I used to think it was just for "hackers" and those who lived and breathed code. But guess what? I was wrong. So, so wrong.</p>
<p>I started this journey because I was tired. Tired of feeling like my computer was dictating my workflow. I wanted more control, more efficiency. And I'd heard whispers that the command line was the key to unlocking that. Turns out, those whispers were spot on. Learning the command line opened up a whole new world, a world where I could automate tasks, manipulate files, and more.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="so-lets-begin">So, let's begin<a href="https://mkh-site.netlify.app/how-i-learned-command-line#so-lets-begin" class="hash-link" aria-label="Direct link to So, let's begin" title="Direct link to So, let's begin">​</a></h2>
<p>Let’s be honest, my initial encounters were…rough. The sheer number of commands felt overwhelming. <code>ls</code>, <code>cd</code>, <code>mkdir</code>, <code>rm</code> – they were just random letters at first. And the syntax? Don’t even get me started. Errors popped up like mushrooms after a rainstorm, and I felt like I was constantly breaking things.</p>
<p>But I persevered, and here’s what helped me:</p>
<ul>
<li>Online Tutorials and Courses – <a href="https://www.codecademy.com/" target="_blank" rel="noopener noreferrer"><strong>Codecademy</strong></a> and <a href="https://www.freecodecamp.org/" target="_blank" rel="noopener noreferrer"><strong>freeCodeCamp</strong></a> were great. They broke down complex concepts into digestible chunks.</li>
<li>Visual explanations are very helpful – found this on YouTube. I found a channel that walked me through the commands step by step.</li>
<li>"The Linux Command Line" by William Shotts – This book became my trusty companion, a comprehensive guide to navigating the command line.</li>
<li>Stack Overflow – This site became my best friend.</li>
<li>Then, I practice. Even 20 mins a day made a big difference.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="heres-a-breakdown-of-my-learning-strategies">Here's a breakdown of my learning strategies:<a href="https://mkh-site.netlify.app/how-i-learned-command-line#heres-a-breakdown-of-my-learning-strategies" class="hash-link" aria-label="Direct link to Here's a breakdown of my learning strategies:" title="Direct link to Here's a breakdown of my learning strategies:">​</a></h2>
<ul>
<li>Start with the basics: Mastering <code>ls</code>, <code>cd</code>, <code>mkdir</code>, <code>rm</code>, and <code>pwd</code> is <em>crucial</em>.</li>
<li>Consistency is key. Even short sessions add up.</li>
<li>Create a cheat sheet (Keep your frequently used commands handy).</li>
<li>Understand the concepts (Don't just memorize, understand why the commands work).</li>
<li>Learn about file paths – Navigating the file system is essential.</li>
</ul>
<p>When I finally understood how pipes and redirects worked, it felt like unlocking a secret level in a video game.</p>
<p>"<strong>So, where does all this command-line knowledge actually take you?</strong> For me, it's woven into my daily workflow. I can manage files and directories, moving, renaming, and deleting with simple commands, saving me tons of time. Automating repetitive tasks with custom scripts has been a game-changer, freeing me up to focus on more creative work. When it comes to version control with Git, the command line is my best friend, allowing for precise control. Connecting to remote servers via SSH is seamless, letting me manage projects from anywhere. And for web development, it's indispensable—running servers, building projects, and deploying code becomes far more efficient. For example, if I need to quickly search for specific text within files, I use <code>grep -r "example" *</code> to find all instances of 'example' in my current directory and its subdirectories. Or when I need to locate specific files, <code>find . -name "*.txt"</code> helps me find all text files within a given directory. And <code>sed 's/oldtext/newtext/g' file.txt</code> allows for quick text file editing. These are just snippets of the power the command line gives you."</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-quick-tips">A quick tips<a href="https://mkh-site.netlify.app/how-i-learned-command-line#a-quick-tips" class="hash-link" aria-label="Direct link to A quick tips" title="Direct link to A quick tips">​</a></h2>
<p>If you're just starting your command-line journey, don't feel overwhelmed. A great way to begin is by setting up a virtual machine, providing a safe sandbox to experiment without fear of damaging your system. Remember that the <code>man</code> command is your best friend, offering detailed documentation for any command you encounter. And don't hesitate to reach out for help online; the community is incredibly supportive and willing to guide you. Finally, personalize your terminal to make it visually appealing. A customized terminal can make the learning process more enjoyable and less intimidating. Start small, practice consistently, and you'll be amazed at how quickly you progress.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="--conclusion">- Conclusion<a href="https://mkh-site.netlify.app/how-i-learned-command-line#--conclusion" class="hash-link" aria-label="Direct link to - Conclusion" title="Direct link to - Conclusion">​</a></h2>
<p>Learning the command line was one of the best investments I've made in my tech skills. It's boosted my productivity, given me more control over my computer, and opened up a world of possibilities.</p>
<p>So, I encourage you to start your own journey. Open your terminal and type ls. See what happens! Find a basic online tutorial and follow along. You might be surprised at how quickly you pick it up.</p>
<p>And remember, the command line isn’t just for tech wizards. It’s for anyone who wants to unlock the full potential of their computer.</p>]]></content:encoded>
            <category>command line</category>
            <category>cmd</category>
            <category>cli</category>
        </item>
    </channel>
</rss>